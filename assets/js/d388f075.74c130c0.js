"use strict";(self.webpackChunkmy_test=self.webpackChunkmy_test||[]).push([[2104],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return h}});var r=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var u=r.createContext({}),p=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(u.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=p(t),h=l,m=d["".concat(u,".").concat(h)]||d[h]||c[h]||a;return t?r.createElement(m,o(o({ref:n},s),{},{components:t})):r.createElement(m,o({ref:n},s))}));function h(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,o=new Array(a);o[0]=d;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4104:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return s},default:function(){return d}});var r=t(7462),l=t(3366),a=(t(7294),t(3905)),o=["components"],i={},u="\u6811",p={unversionedId:"algo/tree",id:"algo/tree",isDocsHomePage:!1,title:"\u6811",description:"tree",source:"@site/docs/algo/tree.md",sourceDirName:"algo",slug:"/algo/tree",permalink:"/docs/algo/tree",version:"current",frontMatter:{},sidebar:"docs",previous:{title:"\u94fe\u8868",permalink:"/docs/algo/linkedList"},next:{title:"\u5404\u79cd\u624b\u5199",permalink:"/docs/interview/hand"}},s=[{value:"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22 DFS",id:"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22-dfs",children:[]},{value:"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22 BFS",id:"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22-bfs",children:[]},{value:"\u4e8c\u53c9\u6811",id:"\u4e8c\u53c9\u6811",children:[{value:"DFS",id:"dfs",children:[]},{value:"\u9012\u5f52\u524d\u4e2d\u540e\u5e8f\u904d\u5386",id:"\u9012\u5f52\u524d\u4e2d\u540e\u5e8f\u904d\u5386",children:[]},{value:"\u8fed\u4ee3 \u663e\u5f0f\u7ef4\u62a4\u4e00\u4e2a\u6808",id:"\u8fed\u4ee3-\u663e\u5f0f\u7ef4\u62a4\u4e00\u4e2a\u6808",children:[]},{value:"BFS",id:"bfs",children:[]},{value:"\u5c42\u5e8f\u904d\u5386",id:"\u5c42\u5e8f\u904d\u5386",children:[]},{value:"\u6700\u77ed\u8def\u5f84",id:"\u6700\u77ed\u8def\u5f84",children:[]}]},{value:"\u4e00\u4e9b\u7ec3\u4e60",id:"\u4e00\u4e9b\u7ec3\u4e60",children:[{value:"\u4e8c\u53c9\u6811\u53cd\u8f6c",id:"\u4e8c\u53c9\u6811\u53cd\u8f6c",children:[]},{value:"104. \u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6",id:"104-\u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6",children:[]},{value:"111. \u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6",id:"111-\u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6",children:[]},{value:"112. \u8def\u5f84\u603b\u548c",id:"112-\u8def\u5f84\u603b\u548c",children:[]}]},{value:"\u6811\u5f62\u6570\u636e\u6241\u5e73\u5316",id:"\u6811\u5f62\u6570\u636e\u6241\u5e73\u5316",children:[{value:"\u9012\u5f52",id:"\u9012\u5f52",children:[]},{value:"\u6241\u5e73\u5316\u6570\u636e",id:"\u6241\u5e73\u5316\u6570\u636e",children:[]}]}],c={toc:s};function d(e){var n=e.components,t=(0,l.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u6811"},"\u6811"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://cdn.jsdelivr.net/gh/honjaychang/bp/algo/dfsTree.png",alt:"tree"})),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"http://mshang.ca/syntree/"},"\u5728\u7ebf\u7ed8\u56fe")," ",(0,a.kt)("inlineCode",{parentName:"p"},"[1 [2  [4] [5 [6 [8][x]] [7] ] ] [3 ]"),"    ",(0,a.kt)("inlineCode",{parentName:"p"},"x \u4e0d\u5b58\u5728 \u53ea\u662f\u4ee3\u88688 \u662f\u5de6\u8282\u70b9")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"// \u5927\u6982\u8fd9\u6837\u7ed3\u6784\ninterface Node {\n  val: number;\n  children: Node[];\n}\n")),(0,a.kt)("h2",{id:"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22-dfs"},"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22 DFS"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const dfs = (root) => {\n  console.log(root.val)\n  root.children.forEach(dfs)\n  // root.children.forEach((child) => {dfs(child)})\n  // \u904d\u5386\u8282\u70b9\u7684\u6bcf\u4e2a\u5b69\u5b50\u8282\u70b9\uff0c\u5e76\u4e14\u5728\u5b69\u5b50\u8282\u70b9\u4e0a\u4f7f\u7528dfs\u9012\u5f52 \u7ee7\u7eed\u904d\u5386\n}\ndfs(tree);\n")),(0,a.kt)("h2",{id:"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22-bfs"},"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22 BFS"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const bfs = (root) => {\n  //1\u3001\u65b0\u5efa\u4e00\u4e2a\u961f\u5217\uff0c\u628a\u6839\u8282\u70b9\u5165\u961f\n  const q = [root]\n  //4\u3001\u91cd\u590d\u7b2c2\uff0c3\u6b65\uff0c\u76f4\u5230\u961f\u5217\u4e3a\u7a7a\n  while (q.length > 0) {\n    //2\u3001\u628a\u5bf9\u5934\u51fa\u961f\uff0c\u5e76\u8bbf\u95ee\n    const n = q.shift();\n    console.log(n.val);\n    // 3\u3001\u628a\u5bf9\u5934\u7684children\u6328\u4e2a\u5165\u961f\n    n.children.forEach(child => {\n      q.push(child);\n    });\n  }\n}\nbfs(tree);\n")),(0,a.kt)("h2",{id:"\u4e8c\u53c9\u6811"},"\u4e8c\u53c9\u6811"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u524d\u5e8f ",(0,a.kt)("inlineCode",{parentName:"li"},"1 2 4 5 6 8 7 3")),(0,a.kt)("li",{parentName:"ul"},"\u4e2d\u5e8f ",(0,a.kt)("inlineCode",{parentName:"li"},"4 2 8 6 5 7 1 3")),(0,a.kt)("li",{parentName:"ul"},"\u540e\u5e8f ",(0,a.kt)("inlineCode",{parentName:"li"},"4 8 6 7 5 2 3 1"))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u4e8c\u53c9\u6811\u7684\u5b9a\u4e49")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// Definition for a binary tree node.\nfunction TreeNode(val, left, right) {\n  this.val = val === undefined ? 0 : val;\n  this.left = left === undefined ? null : left;\n  this.right = right === undefined ? null : right;\n}\n")),(0,a.kt)("h3",{id:"dfs"},"DFS"),(0,a.kt)("h3",{id:"\u9012\u5f52\u524d\u4e2d\u540e\u5e8f\u904d\u5386"},"\u9012\u5f52\u524d\u4e2d\u540e\u5e8f\u904d\u5386"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"{5}","{5}":!0},"const preorderTraversal = (root) => {\n  let res = [];\n  if (!root) return res;\n  const order = (node) => {\n    // \u4e3b\u8981\u5c31\u662f\u8fd9\u4e09\u4e2a\u7684\u987a\u5e8f\n    res.push(node.val);\n    if (node.left !== null) order(node.left);\n    if (node.right !== null) order(node.right);\n  };\n  order(root);\n  return res;\n};\n\nconst inorderTraversal = (root) => { };\n\nconst postorderTraversal = (root) => { };\n")),(0,a.kt)("h3",{id:"\u8fed\u4ee3-\u663e\u5f0f\u7ef4\u62a4\u4e00\u4e2a\u6808"},"\u8fed\u4ee3 \u663e\u5f0f\u7ef4\u62a4\u4e00\u4e2a\u6808"),(0,a.kt)("p",null,"\u4ece\u6811\u7684\u6839\u8282\u70b9\uff0c\u4e00\u76f4\u6cbf\u4e00\u6761\u8def\u8d70\u5230\u5e95 \u7136\u540e\u56de\u9000\u5230\u5206\u5c94\u8282\u70b9\u7ee7\u7eed\u8d70\u5230\u5e95"),(0,a.kt)("p",null,"\u6808"),(0,a.kt)("p",null,"\u5148\u5c06\u6839\u5165\u6808"),(0,a.kt)("p",null,"while\u6808\u4e0d\u7a7a\uff1f"),(0,a.kt)("p",null,"\u6808\u9876\u5143\u7d20pop \u540c\u65f6\u653e\u8fdbres\u6570\u7ec4 \u5e76\u5224\u65ad\u5f53\u524d\u5143\u7d20\u662f\u5426\u6709\u5de6\u53f3\u8282\u70b9 \u5e76\u4e14\u5148\u653e\u5165\u53f3\u8282\u70b9 \u518d\u5c06\u5de6\u8282\u70b9\u5165\u6808"),(0,a.kt)("h4",{id:"\u524d\u5e8f\u904d\u5386"},"\u524d\u5e8f\u904d\u5386"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const preorderTraversal = (root) => {\n  let res = [];\n  if (!root) return res;\n  let stack = [];\n  stack.push(root);\n  while (stack.length > 0) {\n    let current = stack.pop();\n    res.push(current.val);\n    if (current.right !== null) stack.push(current.right);\n    if (current.left !== null) stack.push(current.left);\n  }\n  return res;\n};\n")),(0,a.kt)("h4",{id:"\u4e2d\u5e8f\u904d\u5386"},"\u4e2d\u5e8f\u904d\u5386"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const inorderTraversal = (root) => {\n  let res = [];\n  if (!root) return res;\n\n  let stack = [];\n  let temp = root;\n  while (temp !== null) {\n    stack.push(temp);\n    temp = temp.left;\n  }\n  while (stack.length > 0) {\n    let current = stack.pop();\n    res.push(current.val);\n    if (current.right !== null) {\n      let temp2 = current.right;\n      while (temp2 !== null) {\n        stack.push(temp2);\n        temp2 = temp2.left;\n      }\n    }\n  }\n  return res;\n};\n")),(0,a.kt)("h4",{id:"\u540e\u5e8f\u904d\u5386"},"\u540e\u5e8f\u904d\u5386"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const postorderTraversal = (root) => {\n  let res = [];\n  if (!root) return res;\n\n  let stack = [];\n  let temp = root;\n  while (temp !== null) {\n    stack.push(temp);\n    temp = temp.left;\n  }\n  let prev = null;\n  while (stack.length > 0) {\n    const top = stack[stack.length - 1];\n    if (top.right === null) {\n      prev = stack.pop();\n      res.push(top.val);\n    } else {\n      if (prev !== top.right) {\n        let temp2 = top.right;\n        while (temp2 !== null) {\n          stack.push(temp2);\n          temp2 = temp2.left;\n        }\n      } else {\n        prev = stack.pop();\n        res.push(top.val);\n      }\n    }\n  }\n  return res;\n};\n")),(0,a.kt)("h3",{id:"bfs"},"BFS"),(0,a.kt)("h3",{id:"\u5c42\u5e8f\u904d\u5386"},"\u5c42\u5e8f\u904d\u5386"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const levelOrder = (root) => {\n  const res = [];\n  if (root === null) return res;\n  const queue = [];\n  queue.push(root);\n  while (queue.length > 0) {\n    const current = queue.shift();\n    res.push(current.val);\n    if (current.left) queue.push(current.left);\n    if (current.right) queue.push(current.right);\n  }\n  return res;\n};\n")),(0,a.kt)("h3",{id:"\u6700\u77ed\u8def\u5f84"},"\u6700\u77ed\u8def\u5f84"),(0,a.kt)("p",null,"\u5c42\u5e8f\u904d\u5386 102"),(0,a.kt)("p",null,"\u961f\u5217"),(0,a.kt)("p",null,"\u5224\u65ad\u5f53\u524d\u5143\u7d20\u6709\u6ca1\u6709\u5de6\u53f3\u8282\u70b9 \u6709\u7684\u8bdd\u63a8\u51fa\u81ea\u5df1\u540c\u65f6\u5c06\u5de6\u53f3\u8282\u70b9\u52a0\u5165\u65b0\u7684\u961f\u5217"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const queue = []\nqueue.push(root)\nwhile(queue.length > 0){\n  let layerGroup = []\n  let len = queue.length\n  for(let i = 0;i<len;i++){\n    let target = queue.shift()\n    layerGroup.push(target)\n    if(target.left) queue.push(target.left)\n    if(target.right) queue.push(target.right)\n  }\n  res.push(layerGroup)\n}\nreturn res\n")),(0,a.kt)("p",null,"\u5c42\u6b21\u904d\u5386 107"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"res.unshift(layerGroup)\n")),(0,a.kt)("p",null,"\u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe 199"),(0,a.kt)("p",null,"\u76f8\u5f53\u4e8e\u5c42\u5e8f\u904d\u5386\u540e \u53d6\u6bcf\u4e00\u4e2a\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20"),(0,a.kt)("p",null,"\u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148 | LCA DFS 236"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// \u6700\u8fd1\u516c\u5171\u7956\u5148 => LCA\nvar lowestCommonAncestor = function (root, p, q) {\n  if (root === null || root === p || root === q) return root\n  // \u95ee\u9898 \u7f29\u5c0f \u9012\u5f52\u904d\u5386 \u5de6\u53f3\n  let left = lowestCommonAncestor(root.left, p, q)\n  let right = lowestCommonAncestor(root.right, p, q)\n  // \u5982\u679c left right \u90fd\u6709\u503c \u8bc1\u660e\u6839\u8282\u70b9\u5c31\u662f\u5b83\u4eec\u7684 LCA\n  if (left && right) return root\n  // \u5982\u679c\u53ea\u6709\u4e00\u8fb9\u6709\u503c \u5c31\u9012\u5f52\u7f29\u5c0f \u518d\u6b21\u8c03\u7528\n  return left ? left : right\n}\n\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"\n144 qian\n\n\n\n\n94 zhong\n\n//145 hou\n\n\n\n\n")),(0,a.kt)("h2",{id:"\u4e00\u4e9b\u7ec3\u4e60"},"\u4e00\u4e9b\u7ec3\u4e60"),(0,a.kt)("h3",{id:"\u4e8c\u53c9\u6811\u53cd\u8f6c"},"\u4e8c\u53c9\u6811\u53cd\u8f6c"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3a\u6839\u8282\u70b9\u5230\u6700\u8fdc\u53f6\u5b50\u8282\u70b9\u7684\u6700\u957f\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u6570\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tree"},"    3\n   / \\\n  9  20\n    /  \\\n   15   7\n")),(0,a.kt)("h3",{id:"104-\u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6"},(0,a.kt)("a",{parentName:"h3",href:"https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/"},"104. \u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"DFS"),(0,a.kt)("li",{parentName:"ul"},"\u7ec8\u6b62\u6761\u4ef6\uff1a\u5f53\u524d\u8282\u70b9\u4e3a\u7a7a"),(0,a.kt)("li",{parentName:"ul"},"\u8fd4\u56de\u503c",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u8282\u70b9\u4e3a\u7a7a\u65f6\u8bf4\u660e\u9ad8\u5ea6\u4e3a 0\uff0c\u6240\u4ee5\u8fd4\u56de 0"),(0,a.kt)("li",{parentName:"ul"},"\u8282\u70b9\u4e0d\u4e3a\u7a7a\u65f6\u5219\u5206\u522b\u6c42\u5de6\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u7684\u6700\u5927\u503c\uff0c\u540c\u65f6\u52a01\u8868\u793a\u5f53\u524d\u8282\u70b9\u7684\u9ad8\u5ea6\uff0c\u8fd4\u56de\u8be5\u6570\u503c")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var maxDepth = function(root) {\n  if (!root) return 0;\n  let left = maxDepth(root.left);\n  let right = maxDepth(root.right);\n  return Math.max(left, right) + 1;\n};\n")),(0,a.kt)("h3",{id:"111-\u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6"},(0,a.kt)("a",{parentName:"h3",href:"https://leetcode-cn.com/problems/minimum-depth-of-binary-tree/"},"111. \u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"DFS"),(0,a.kt)("li",{parentName:"ul"},"\u5f53\u524d\u8282\u70b9 root \u4e3a\u7a7a\u65f6\uff0c\u8bf4\u660e\u6b64\u5904\u6811\u7684\u9ad8\u5ea6\u4e3a 0\uff0c0 \u4e5f\u662f\u6700\u5c0f\u503c"),(0,a.kt)("li",{parentName:"ul"},"\u5f53\u524d\u8282\u70b9 root \u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u90fd\u4e3a\u7a7a\u65f6\uff0c\u8bf4\u660e\u6b64\u5904\u6811\u7684\u9ad8\u5ea6\u4e3a 1\uff0c1 \u4e5f\u662f\u6700\u5c0f\u503c"),(0,a.kt)("li",{parentName:"ul"},"\u5982\u679c\u4e3a\u5176\u4ed6\u60c5\u51b5\uff0c\u5219\u8bf4\u660e\u5f53\u524d\u8282\u70b9\u6709\u503c\uff0c\u4e14\u9700\u8981\u5206\u522b\u8ba1\u7b97\u5176\u5de6\u53f3\u5b50\u6811\u7684\u6700\u5c0f\u6df1\u5ea6\uff0c\u8fd4\u56de\u6700\u5c0f\u6df1\u5ea6 +1\uff0c+1 \u8868\u793a\u5f53\u524d\u8282\u70b9\u5b58\u5728\u6709 1 \u4e2a\u6df1\u5ea6")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var minDepth = function(root) {\n    if(root == null) {\n        return 0;\n    }\n    if(root.left == null && root.right == null) {\n        return 1;\n    }\n    let ans = Number.MAX_SAFE_INTEGER;\n    if(root.left != null) {\n        ans = Math.min(minDepth(root.left), ans);\n    }\n    if(root.right != null) {\n        ans = Math.min(minDepth(root.right), ans);\n    }\n    return ans + 1;\n};\n")),(0,a.kt)("h3",{id:"112-\u8def\u5f84\u603b\u548c"},(0,a.kt)("a",{parentName:"h3",href:"https://leetcode-cn.com/problems/path-sum/"},"112. \u8def\u5f84\u603b\u548c")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u5224\u65ad\u8be5\u6811\u4e2d\u662f\u5426\u5b58\u5728 ",(0,a.kt)("strong",{parentName:"p"},"\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9")," \u7684\u8def\u5f84\uff0c\u8fd9\u6761\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u503c\u76f8\u52a0\u7b49\u4e8e\u76ee\u6807\u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"targetSum")," ")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"DFS")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var hasPathSum = function (root, targetSum) {\n  // \u904d\u5386\u5230null\u8282\u70b9\n  if (!root) return false;\n    // \u904d\u5386\u5230\u53f6\u5b50\u8282\u70b9\n  if (!root.left && !root.right) {\n    return root.val === targetSum;\n  }\n    // \u5f53\u524d\u9012\u5f52\u95ee\u9898 \u62c6\u89e3\u6210 \u4e24\u4e2a\u5b50\u6811\u7684\u95ee\u9898\uff0c\u5176\u4e2d\u4e00\u4e2atrue\u4e86\u5c31\u884c\n  return hasPathSum(root.left, targetSum - root.val) || hasPathSum(root.right, targetSum - root.val);\n};\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"BFS"),(0,a.kt)("li",{parentName:"ul"},"\u8fdb\u884c\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\uff0c\u4f7f\u7528\u4e24\u4e2a\u961f\u5217\uff0c\u4e00\u4e2a\u961f\u5217\u7528\u4e8e\u4fdd\u5b58\u8282\u70b9\uff0c\u4e00\u4e2a\u961f\u5217\u7528\u4e8e\u4fdd\u5b58\u5bf9\u5e94\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u548c\u3002\u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u5224\u65ad\u8def\u5f84\u548c\u662f\u5426\u7b49\u4e8esum\u3002\uff08\u4f7f\u7528\u6808\u4e5f\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u987a\u5e8f\u4e0d\u540c\u800c\u5df2\uff0c\u961f\u5217\u5148\u904d\u5386\u5de6\u5b50\u6811\uff0c\u6808\u5148\u904d\u5386\u53f3\u5b50\u6811\uff09")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var hasPathSum = function(root, targetSum) {\n    if(root === null) return false;\n  \n    var queue1 = [root];\n    var queue2 = [root.val];\n    while(queue1.length !== 0){\n        var node = queue1.shift();\n        var rootVal = queue2.shift();\n        if(node.left == null && node.right == null && rootVal == targetSum){\n            return true;\n        }\n        if(node.left){\n            queue1.push(node.left);\n            queue2.push(node.left.val + rootVal);\n        }\n        if(node.right){\n            queue1.push(node.right);\n            queue2.push(node.right.val + rootVal);\n        }\n    }\n    return false;\n};\n")),(0,a.kt)("h4",{id:"07-\u91cd\u5efa\u4e8c\u53c9\u6811"},(0,a.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/zhong-jian-er-cha-shu-lcof/"},"07. \u91cd\u5efa\u4e8c\u53c9\u6811")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u8f93\u5165\u67d0\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u7684\u7ed3\u679c\uff0c\u8bf7\u91cd\u5efa\u8be5\u4e8c\u53c9\u6811\u3002\u5047\u8bbe\u8f93\u5165\u7684\u524d\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u7684\u7ed3\u679c\u4e2d\u90fd\u4e0d\u542b\u91cd\u590d\u7684\u6570\u5b57\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function TreeNode(val) {\n  this.val = val;\n  this.left = this.right = null;\n}\nvar buildTree = function (preorder, inorder) {\n  if (!preorder.length || !inorder.length) return null;\n\n  let rootVal = preorder[0];\n  let rootIndex = inorder.indexOf(rootVal);\n  const node = new TreeNode(rootVal);\n\n  node.left = buildTree(\n    preorder.slice(1, rootIndex + 1),\n    inorder.slice(0, rootIndex)\n  );\n  node.right = buildTree(\n    preorder.slice(rootIndex + 1),\n    inorder.slice(rootIndex + 1)\n  );\n  return node;\n};\n")),(0,a.kt)("h4",{id:"27-\u4e8c\u53c9\u6811\u7684\u955c\u50cf"},(0,a.kt)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/er-cha-shu-de-jing-xiang-lcof/"},"27. \u4e8c\u53c9\u6811\u7684\u955c\u50cf")),(0,a.kt)("p",null,"\u9012\u5f52"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n\nvar mirrorTree = function (root) {\n  if (!root) return null;\n  // \u4ea4\u6362\u5f53\u524d\u5de6\u53f3\u8282\u70b9\n  let temp = root.left;\n  root.left = root.right;\n  root.right = temp;\n  // \u9012\u5f52\u64cd\u4f5c\u5de6\u53f3\u5b50\u6811\n  mirrorTree(root.left);\n  mirrorTree(root.right);\n  return root;\n};\n")),(0,a.kt)("p",null,"\u8f85\u52a9\u6808"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u7279\u4f8b\u5316\uff1a\u9488\u5bf9 ",(0,a.kt)("inlineCode",{parentName:"li"},"root"),"\u4e3a",(0,a.kt)("inlineCode",{parentName:"li"},"null"),"\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u8fd4\u56de",(0,a.kt)("inlineCode",{parentName:"li"},"root")),(0,a.kt)("li",{parentName:"ul"},"\u521d\u59cb\u5316\uff1a\u5b9a\u4e49\u4e00\u4e2a\u8f85\u52a9\u6808\uff0c\u5c06\u6839\u8282\u70b9\u5165\u6808"),(0,a.kt)("li",{parentName:"ul"},"\u9012\u5f52\uff1a\u5224\u65ad\u6808\u4e0d\u4e3a\u7a7a\uff0c\u5219\u9010\u6b65\u51fa\u6808\uff0c\u5c06\u8282\u70b9\u7684\u5de6\u53f3\u8282\u70b9\u4e92\u6362\uff0c\u5b9e\u73b0\u955c\u50cf")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var mirrorTree = function (root) {\n  if (root) {\n    let stack = [];\n    stack.push(root);\n    while (stack.length > 0) {\n      let node = stack.pop();\n      let temp = node.left;\n      node.left = node.right;\n      node.right = temp;\n      if (node.left) stack.push(node.left);\n      if (node.right) stack.push(node.right);\n    }\n  }\n  return root;\n};\n")),(0,a.kt)("h2",{id:"\u6811\u5f62\u6570\u636e\u6241\u5e73\u5316"},"\u6811\u5f62\u6570\u636e\u6241\u5e73\u5316"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const data = [\n    { id: 1, pid: 0 },\n    { id: 2, pid: 1 },\n    { id: 3, pid: 1 },\n    { id: 4, pid: 3 },\n    { id: 5, pid: 0 },\n    { id: 6, pid: 5 },\n];\n\n[\n    {\n        id: 1,\n        pid: 0,\n        children: [\n            { id: 2, pid: 1 },\n            { id: 3, pid: 1, children: [{ id: 4, pid: 3 }] },\n        ],\n    },\n    { id: 5, pid: 0, children: [{ id: 6, pid: 5 }] },\n];\n")),(0,a.kt)("h3",{id:"\u9012\u5f52"},"\u9012\u5f52"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// \u5148\u7b5b\u9009\u51fa\u9876\u7ea7\u6570\u636e \u7136\u540e\u5904\u7406\u9876\u7ea7\u548c\u5b50\u96c6 \u6700\u540e\u9012\u5f52\u5904\u7406\u5b50\u96c6\u4e0e\u5b50\u96c6\u7684\u5b50\u96c6\nfunction formatDataTree(data) {\n    let parents = data.filter((p) => p.pid === 0);\n    let children = data.filter((p) => p.pid !== 0);\n\n    dataToTree(parents, children);\n\n    return parents;\n    // parents children \u90fd\u662f\u6570\u7ec4\n    function dataToTree(parents, children) {\n        parents.map((p) => {\n            children.map((c, i) => {\n                if (c.pid === p.id) {\n                    // \u4f18\u5316\u70b9\n                    let _children = JSON.parse(JSON.stringify(children));\n                    _children.splice(i, 1);\n                    dataToTree([c], _children);\n                    if (p.children) {\n                        p.children.push(c);\n                    } else {\n                        p.children = [c];\n                    }\n                }\n            });\n        });\n    }\n}\n")),(0,a.kt)("h3",{id:"\u6241\u5e73\u5316\u6570\u636e"},"\u6241\u5e73\u5316\u6570\u636e"),(0,a.kt)("h4",{id:"filter"},(0,a.kt)("inlineCode",{parentName:"h4"},"filter")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function formatDataTree2(data) {\n    let _data = JSON.parse(JSON.stringify(data));\n    return _data.filter((p) => {\n        let _arr = _data.filter((c) => c.pid === p.id);\n        _arr.length && (p.children = _arr);\n        return p.pid === 0;\n    });\n}\n")),(0,a.kt)("h4",{id:"reduce"},(0,a.kt)("inlineCode",{parentName:"h4"},"reduce")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const formatDataTree3 = (data) => {\n    return data.reduce((total, item, index, list) => {\n        if (item.pid === 0) {\n            total.push({ ...item, children: list.filter((c) => c.pid === item.id) });\n        } else {\n            item.children = list.filter((c) => c.pid === item.id);\n        }\n        return total;\n    }, []);\n};\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://bugshouji.com/shareweb/t1402"},"\u6811\u5f62\u6570\u636e \u8f6c \u6241\u5e73\u6570\u636e"))))}d.isMDXComponent=!0}}]);