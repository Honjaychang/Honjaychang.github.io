"use strict";(self.webpackChunkmy_test=self.webpackChunkmy_test||[]).push([[5596],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(t),f=o,k=d["".concat(l,".").concat(f)]||d[f]||u[f]||a;return t?r.createElement(k,i(i({ref:n},c),{},{components:t})):r.createElement(k,i({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5275:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],s={},l=void 0,p={unversionedId:"reactCore/temp",id:"reactCore/temp",isDocsHomePage:!1,title:"temp",description:"renderRoot",source:"@site/docs/reactCore/temp.md",sourceDirName:"reactCore",slug:"/reactCore/temp",permalink:"/docs/reactCore/temp",version:"current",frontMatter:{}},c=[{value:"commit\u9636\u6bb5",id:"commit\u9636\u6bb5",children:[]}],u={toc:c};function d(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"renderroot"},(0,a.kt)("inlineCode",{parentName:"h4"},"renderRoot")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"nextUnitOfWork = createWorkInProgress()")," \u62f7\u8d1d\u4e00\u4efd ",(0,a.kt)("inlineCode",{parentName:"li"},"fiber")," \u8282\u70b9\uff0c\u5728 ",(0,a.kt)("inlineCode",{parentName:"li"},"nextUnitOfWork")," \u4e2d\u4fee\u6539\uff0c\u9632\u6b62\u6539\u53d8\u5f53\u524d ",(0,a.kt)("inlineCode",{parentName:"li"},"fiberTree"),"\u3002",(0,a.kt)("inlineCode",{parentName:"li"},"nextUnitOfWork")," \u662f\u4e0b\u4e00\u4e2a\u8981\u66f4\u65b0\u7684\u8282\u70b9   \u51fd\u6570\u4e3b\u8981\u662f\u7528\u6765\u521b\u5efawIP\u6811\uff1f"),(0,a.kt)("li",{parentName:"ul"},"\u8fdb\u5165",(0,a.kt)("inlineCode",{parentName:"li"},"workLoop")," \u5faa\u73af\u89e3\u6790\u5de5\u4f5c\u5355\u5143 \u6807\u8bb0effectTag")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function renderRoot(root, isYieldy) {\n\n  flushPassiveEffects();\n\n  isWorking = true;\n  var previousDispatcher = ReactCurrentDispatcher.current;\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  var expirationTime = root.nextExpirationTimeToWorkOn;\n\n  // Check if we're starting from a fresh stack, or if we're resuming from previously yielded work.\n  if (expirationTime !== nextRenderExpirationTime || root !== nextRoot || nextUnitOfWork === null) {\n    // Reset the stack and start working from the root.\n    resetStack();\n    nextRoot = root;\n    nextRenderExpirationTime = expirationTime;\n    // \u521b\u5efaworkInProgress\u6811\n    nextUnitOfWork = createWorkInProgress(nextRoot.current, null, nextRenderExpirationTime);\n    root.pendingCommitExpirationTime = NoWork;\n    }\n  }\n  startWorkLoopTimer(nextUnitOfWork);\n  do {\n    try {\n      // \u5faa\u73af\u66f4\u65b0\u8282\u70b9\n      workLoop(isYieldy);\n    } catch (thrownValue) {}\n    break;\n  } while (true);\n  // \u7701\u7565\u4e00\u957f\u4e32\u4ee3\u7801\n\n  // Ready to commit.\n  onComplete(root, rootWorkInProgress, expirationTime);\n}\n\n\nfunction workLoop(isYieldy) {\n  if (!isYieldy) {\n    // Flush work without yielding\n    while (nextUnitOfWork !== null) {\n      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\n    }\n  } else {\n    // Flush asynchronous work until there's a higher priority event\n    while (nextUnitOfWork !== null && !shouldYieldToRenderer()) {\n      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\n    }\n  }\n}\n\nfunction onComplete(root, finishedWork, expirationTime) {\n  root.pendingCommitExpirationTime = expirationTime;\n  root.finishedWork = finishedWork;\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"// \u4e0ehooks\u6709\u5173\nfunction flushPassiveEffects() {\n  if (passiveEffectCallbackHandle !== null) {\n    cancelPassiveEffects(passiveEffectCallbackHandle);\n  }\n  if (passiveEffectCallback !== null) {\n    // We call the scheduled callback instead of commitPassiveEffects directly\n    // to ensure tracing works correctly.\n    passiveEffectCallback();\n  }\n}\n  \n// \u9996\u6b21\u6e32\u67d3 \u521d\u59cb\u5316\u5e76\u5b8c\u5584wIP\u6811\n// \u66f4\u65b0\u6e32\u67d3 \u590d\u7528\u5e76\u5b8c\u5584\n// This is used to create an alternate fiber to do work on.\nfunction createWorkInProgress(current, pendingProps, expirationTime) {\n  var workInProgress = current.alternate;\n  if (workInProgress === null) {\n    // \u53cc\u7f13\u5b58\u6811\n    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);\n    workInProgress.elementType = current.elementType;\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n\n\n    workInProgress.alternate = current;\n    current.alternate = workInProgress;\n  } else {\n    workInProgress.pendingProps = pendingProps;\n\n    // We already have an alternate.\n    // Reset the effect tag.\n    workInProgress.effectTag = NoEffect;\n\n    // The effect list is no longer valid.\n    workInProgress.nextEffect = null;\n    workInProgress.firstEffect = null;\n    workInProgress.lastEffect = null;\n\n  }\n\n  workInProgress.childExpirationTime = current.childExpirationTime;\n  workInProgress.expirationTime = current.expirationTime;\n\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n  workInProgress.contextDependencies = current.contextDependencies;\n\n  // These will be overridden during the parent's reconciliation\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n\n\n  return workInProgress;\n}\n\n// \u5faa\u73af\u5355\u5143\u66f4\u65b0\uff0c\u5bf9\u6574\u9897 fiberTree \u90fd\u904d\u5386\u4e00\u904d  \n// \u5728React 17\u7684\u65f6\u5019 \u53d8\u6210\u4e86 workLoopSync() || workLoopConcurrent()\n// nextUnitOfWork -> workInProgress\n// shouldYieldToRenderer -> shouldYield\nfunction workLoop(isYieldy) {\n  if (!isYieldy) {\n    // Flush work without yielding\n    while (nextUnitOfWork !== null) {\n      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\n    }\n  } else {\n    // Flush asynchronous work until there's a higher priority event \u9047\u5230\u9ad8\u4f18\u5148\u7ea7\u53ef\u4e2d\u65ad\n    while (nextUnitOfWork !== null && !shouldYieldToRenderer()) {\n      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\n    }\n  }\n}\n\nvar didYield = false;\nfunction shouldYieldToRenderer() {\n  if (didYield) {\n    return true;\n  }\n  if (unstable_shouldYield()) {\n    didYield = true;\n    return true;\n  }\n  return false;\n}\n  \nfunction performUnitOfWork(workInProgress) {\n  // The current, flushed, state of this fiber is the alternate.\n  // Ideally nothing should rely on this, but relying on it here\n  // means that we don't need an additional field on the work in progress.\n  var current$$1 = workInProgress.alternate;\n\n  var next = void 0;\n\n  next = beginWork(current$$1, workInProgress, nextRenderExpirationTime);\n  workInProgress.memoizedProps = workInProgress.pendingProps;\n\n\n  if (next === null) {\n    // \u5982\u679cnext\u503c\u4e3anull\uff0c\u8bf4\u660e\u5f53\u524d\u7684Fiber\u7ed3\u70b9\u5df2\u7ecf\u662f\u53f6\u5b50\u7ed3\u70b9\uff0c\u63a5\u4e0b\u6765\u8981\u6267\u884c\u5b8c\u6210\u5de5\u4f5c\u5355\u5143\u89e3\u6790\u5de5\u4f5c\n    next = completeUnitOfWork(workInProgress);\n  }\n\n  ReactCurrentOwner$2.current = null;\n\n  return next;\n}\n")),(0,a.kt)("h4",{id:"beginwork"},(0,a.kt)("inlineCode",{parentName:"h4"},"beginWork")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"// renderExpirationTime -> renderLanes\nfunction beginWork(current$$1, workInProgress, renderExpirationTime) {\n  var updateExpirationTime = workInProgress.expirationTime;\n\n  // update\u65f6\uff1a\u5982\u679ccurrent\u5b58\u5728\u53ef\u80fd\u5b58\u5728\u4f18\u5316\u8def\u5f84\uff0c\u53ef\u4ee5\u590d\u7528current\uff08\u5373\u4e0a\u4e00\u6b21\u66f4\u65b0\u7684Fiber\u8282\u70b9\uff09\n  if (current$$1 !== null) {\n    var oldProps = current$$1.memoizedProps;\n    var newProps = workInProgress.pendingProps;\n\n    if (oldProps !== newProps || hasContextChanged()) \n      // \u5224\u65ad props \u548c context \u662f\u5426\u6539\u53d8\n      // If props or context changed, mark the fiber as having performed work.\n      // This may be unset if the props are determined to be equal later (memo).\n      didReceiveUpdate = true;\n    } else if (updateExpirationTime < renderExpirationTime) {\n      // \u5224\u65ad\u5f53\u524d fiber \u7684\u4f18\u5148\u7ea7\u662f\u5426\u5c0f\u4e8e\u672c\u6b21\u6e32\u67d3\u7684\u4f18\u5148\u7ea7\uff0c\u5c0f\u4e8e\u7684\u8bdd\u53ef\u4ee5\u8df3\u8fc7\n      didReceiveUpdate = false;\n      // This fiber does not have any pending work. Bailout without entering\n      // the begin phase. There's still some bookkeeping we that needs to be done\n      // in this optimized path, mostly pushing stuff onto the stack.\n      \n      // \u4f1a\u5224\u65ad\u8fd9\u4e2a fiber \u7684\u5b50\u6811\u662f\u5426\u9700\u8981\u66f4\u65b0\uff0c\u5982\u679c\u6709\u9700\u8981\u66f4\u65b0\u4f1a clone \u4e00\u4efd\u5230 workInProgress.child \u8fd4\u56de\u5230 workLoop \u7684 nextUnitOfWork, \u5426\u5219\u4e3a null\n      return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);\n    }\n  } else {\n    didReceiveUpdate = false;\n  }\n\n  // Before entering the begin phase, clear the expiration time.\n  // \u8fdb\u884c\u66f4\u65b0\u5148\u628a\u5f53\u524d fiber \u7684 expirationTime \u8bbe\u7f6e\u4e3a NoWork\n  workInProgress.expirationTime = NoWork;\n    // \u6839\u636e fiber \u7684 tag \u7c7b\u578b\u8fdb\u884c\u66f4\u65b0\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n    case LazyComponent:\n    case FunctionComponent:\n    case ClassComponent:\n    case HostRoot:\n    case HostComponent:\n    case HostText:\n    case SuspenseComponent:\n    case HostPortal:\n    case ForwardRef:\n    case Fragment:\n    case Mode:\n    case Profiler:\n    case ContextProvider:\n    case ContextConsumer:\n    case MemoComponent:\n    case SimpleMemoComponent:\n    case DehydratedSuspenseComponent:\n    default:\n  }\n}\n\n- \u8c03\u7528 `renderWithHooks` \u5f97\u5230 `ReactElement` -> `nextChildren`\n- \u8c03\u7528 `reconcileChildren`\n    - `current`: \u5f53\u524d `fiber` \u8282\u70b9\n  - `workInProgress` \u9700\u8981\u66f4\u65b0\u7684\u8282\u70b9\n    - `nextChildren` \u51fd\u6570\u7684\u8fd4\u56de\u503c\n    - \u6539\u53d8\u4e86 `workInProgress.child` \u5e76\u8fd4\u56de\n\n// \u5728beginWork\u4e2d\uff0c\u901a\u8fc7workInProgress.tag\u5224\u65ad\u5f53\u524d\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u8282\u70b9\u800c\u8c03\u7528\u4e0d\u540c\u7684\u66f4\u65b0\u51fd\u6570\u3002\n\n")),(0,a.kt)("h2",{id:"commit\u9636\u6bb5"},"commit\u9636\u6bb5"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"completeWork")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function completeUnitOfWork(workInProgress) {\n  // Attempt to complete the current unit of work, then move to the\n  // next sibling. If there are no more siblings, return to the\n  // parent fiber.\n  while (true) {\n    // The current, flushed, state of this fiber is the alternate.\n    // Ideally nothing should rely on this, but relying on it here\n    // means that we don't need an additional field on the work in\n    // progress.\n    var current$$1 = workInProgress.alternate;\n    {\n      setCurrentFiber(workInProgress);\n    }\n\n    var returnFiber = workInProgress.return;\n    var siblingFiber = workInProgress.sibling;\n\n    if ((workInProgress.effectTag & Incomplete) === NoEffect) {\n      if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n        // Don't replay if it fails during completion phase.\n        mayReplayFailedUnitOfWork = false;\n      }\n      // This fiber completed.\n      // Remember we're completing this unit so we can find a boundary if it fails.\n      nextUnitOfWork = workInProgress;\n      if (enableProfilerTimer) {\n        if (workInProgress.mode & ProfileMode) {\n          startProfilerTimer(workInProgress);\n        }\n        nextUnitOfWork = completeWork(current$$1, workInProgress, nextRenderExpirationTime);\n        if (workInProgress.mode & ProfileMode) {\n          // Update render duration assuming we didn't error.\n          stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);\n        }\n      } else {\n        nextUnitOfWork = completeWork(current$$1, workInProgress, nextRenderExpirationTime);\n      }\n      if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n        // We're out of completion phase so replaying is fine now.\n        mayReplayFailedUnitOfWork = true;\n      }\n      stopWorkTimer(workInProgress);\n      resetChildExpirationTime(workInProgress, nextRenderExpirationTime);\n      {\n        resetCurrentFiber();\n      }\n\n      if (nextUnitOfWork !== null) {\n        // Completing this fiber spawned new work. Work on that next.\n        return nextUnitOfWork;\n      }\n\n      if (returnFiber !== null &&\n      // Do not append effects to parents if a sibling failed to complete\n      (returnFiber.effectTag & Incomplete) === NoEffect) {\n        // Append all the effects of the subtree and this fiber onto the effect\n        // list of the parent. The completion order of the children affects the\n        // side-effect order.\n        if (returnFiber.firstEffect === null) {\n          returnFiber.firstEffect = workInProgress.firstEffect;\n        }\n        if (workInProgress.lastEffect !== null) {\n          if (returnFiber.lastEffect !== null) {\n            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;\n          }\n          returnFiber.lastEffect = workInProgress.lastEffect;\n        }\n\n        // If this fiber had side-effects, we append it AFTER the children's\n        // side-effects. We can perform certain side-effects earlier if\n        // needed, by doing multiple passes over the effect list. We don't want\n        // to schedule our own side-effect on our own list because if end up\n        // reusing children we'll schedule this effect onto itself since we're\n        // at the end.\n        var effectTag = workInProgress.effectTag;\n        // Skip both NoWork and PerformedWork tags when creating the effect list.\n        // PerformedWork effect is read by React DevTools but shouldn't be committed.\n        if (effectTag > PerformedWork) {\n          if (returnFiber.lastEffect !== null) {\n            returnFiber.lastEffect.nextEffect = workInProgress;\n          } else {\n            returnFiber.firstEffect = workInProgress;\n          }\n          returnFiber.lastEffect = workInProgress;\n        }\n      }\n\n      if (true && ReactFiberInstrumentation_1.debugTool) {\n        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);\n      }\n\n      if (siblingFiber !== null) {\n        // If there is more work to do in this returnFiber, do that next.\n        return siblingFiber;\n      } else if (returnFiber !== null) {\n        // If there's no more work in this returnFiber. Complete the returnFiber.\n        workInProgress = returnFiber;\n        continue;\n      } else {\n        // We've reached the root.\n        return null;\n      }\n    } else {\n      if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n        // Record the render duration for the fiber that errored.\n        stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);\n\n        // Include the time spent working on failed children before continuing.\n        var actualDuration = workInProgress.actualDuration;\n        var child = workInProgress.child;\n        while (child !== null) {\n          actualDuration += child.actualDuration;\n          child = child.sibling;\n        }\n        workInProgress.actualDuration = actualDuration;\n      }\n\n      // This fiber did not complete because something threw. Pop values off\n      // the stack without entering the complete phase. If this is a boundary,\n      // capture values if possible.\n      var next = unwindWork(workInProgress, nextRenderExpirationTime);\n      // Because this fiber did not complete, don't reset its expiration time.\n      if (workInProgress.effectTag & DidCapture) {\n        // Restarting an error boundary\n        stopFailedWorkTimer(workInProgress);\n      } else {\n        stopWorkTimer(workInProgress);\n      }\n\n      {\n        resetCurrentFiber();\n      }\n\n      if (next !== null) {\n        stopWorkTimer(workInProgress);\n        if (true && ReactFiberInstrumentation_1.debugTool) {\n          ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);\n        }\n\n        // If completing this work spawned new work, do that next. We'll come\n        // back here again.\n        // Since we're restarting, remove anything that is not a host effect\n        // from the effect tag.\n        next.effectTag &= HostEffectMask;\n        return next;\n      }\n\n      if (returnFiber !== null) {\n        // Mark the parent fiber as incomplete and clear its effect list.\n        returnFiber.firstEffect = returnFiber.lastEffect = null;\n        returnFiber.effectTag |= Incomplete;\n      }\n\n      if (true && ReactFiberInstrumentation_1.debugTool) {\n        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);\n      }\n\n      if (siblingFiber !== null) {\n        // If there is more work to do in this returnFiber, do that next.\n        return siblingFiber;\n      } else if (returnFiber !== null) {\n        // If there's no more work in this returnFiber. Complete the returnFiber.\n        workInProgress = returnFiber;\n        continue;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  // Without this explicit null return Flow complains of invalid return type\n  // TODO Remove the above while(true) loop\n  // eslint-disable-next-line no-unreachable\n  return null;\n}\n\n\n\n\nfunction completeWork(current, workInProgress, renderExpirationTime) {\n  var newProps = workInProgress.pendingProps;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n    case LazyComponent:\n    case SimpleMemoComponent:\n    case FunctionComponent:\n    case ClassComponent:\n      {\n        var Component = workInProgress.type;\n        if (isContextProvider(Component)) {\n          popContext(workInProgress);\n        }\n        break;\n      }\n    case HostRoot:\n      {\n        popHostContainer(workInProgress);\n        popTopLevelContextObject(workInProgress);\n        var fiberRoot = workInProgress.stateNode;\n        if (fiberRoot.pendingContext) {\n          fiberRoot.context = fiberRoot.pendingContext;\n          fiberRoot.pendingContext = null;\n        }\n        if (current === null || current.child === null) {\n          // If we hydrated, pop so that we can delete any remaining children\n          // that weren't hydrated.\n          popHydrationState(workInProgress);\n          // This resets the hacky state to fix isMounted before committing.\n          // TODO: Delete this when we delete isMounted and findDOMNode.\n          workInProgress.effectTag &= ~Placement;\n        }\n        updateHostContainer(workInProgress);\n        break;\n      }\n    case HostComponent:\n\n    case HostText:\n    case ForwardRef:\n    case SuspenseComponent:\n    case Fragment:\n    case Mode:\n    case Profiler:\n    case HostPortal:\n    case ContextProvider:\n    case ContextConsumer:\n    case MemoComponent:\n    case IncompleteClassComponent:\n    case DehydratedSuspenseComponent:\n    default:\n\n  return null;\n}\n\n\n\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"HostComponent")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u9875\u9762\u6e32\u67d3\u6240\u5fc5\u987b\u7684",(0,a.kt)("inlineCode",{parentName:"li"},"HostComponent"),"\uff08\u5373\u539f\u751f",(0,a.kt)("inlineCode",{parentName:"li"},"DOM\u7ec4\u4ef6"),"\u5bf9\u5e94\u7684",(0,a.kt)("inlineCode",{parentName:"li"},"Fiber\u8282\u70b9"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"case HostComponent: {\n  popHostContext(workInProgress);\n  var rootContainerInstance = getRootHostContainer();\n  var type = workInProgress.type;\n  \n  // update\n  if (current !== null && workInProgress.stateNode != null) {\n    updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);\n\n    if (current.ref !== workInProgress.ref) {\n      markRef$1(workInProgress);\n    }\n  } else {\n    if (!newProps) {\n      !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;\n      // This can happen when we abort work.\n      break;\n    }\n\n    var currentHostContext = getHostContext();\n    // TODO: Move createInstance to beginWork and keep it on a context\n    // \"stack\" as the parent. Then append children as we go in beginWork\n    // or completeWork depending on we want to add then top->down or\n    // bottom->up. Top->down is faster in IE11.\n    var wasHydrated = popHydrationState(workInProgress);\n    if (wasHydrated) {\n      // TODO: Move this and createInstance step into the beginPhase\n      // to consolidate.\n      if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {\n        // If changes to the hydrated node needs to be applied at the\n        // commit-phase we mark this as such.\n        markUpdate(workInProgress);\n      }\n    } else {\n      // mount\n      var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);\n\n      appendAllChildren(instance, workInProgress, false, false);\n\n      // Certain renderers require commit-time effects for initial mount.\n      // (eg DOM renderer supports auto-focus for certain elements).\n      // Make sure such renderers get scheduled for later work.\n      if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance, currentHostContext)) {\n        markUpdate(workInProgress);\n      }\n      workInProgress.stateNode = instance;\n    }\n\n    if (workInProgress.ref !== null) {\n      // If there is a ref on a host node we need to schedule a callback\n      markRef$1(workInProgress);\n    }\n  }\n  break;\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function commitPassiveEffects(root, firstEffect) {\n  rootWithPendingPassiveEffects = null;\n  passiveEffectCallbackHandle = null;\n  passiveEffectCallback = null;\n\n  // Set this to true to prevent re-entrancy\n  var previousIsRendering = isRendering;\n  isRendering = true;\n\n  var effect = firstEffect;\n  do {\n    {\n      setCurrentFiber(effect);\n    }\n\n    if (effect.effectTag & Passive) {\n      var didError = false;\n      var error = void 0;\n      {\n        invokeGuardedCallback(null, commitPassiveHookEffects, null, effect);\n        if (hasCaughtError()) {\n          didError = true;\n          error = clearCaughtError();\n        }\n      }\n      if (didError) {\n        captureCommitPhaseError(effect, error);\n      }\n    }\n    effect = effect.nextEffect;\n  } while (effect !== null);\n  {\n    resetCurrentFiber();\n  }\n\n  isRendering = previousIsRendering;\n\n  // Check if work was scheduled by one of the effects\n  var rootExpirationTime = root.expirationTime;\n  if (rootExpirationTime !== NoWork) {\n    requestWork(root, rootExpirationTime);\n  }\n  // Flush any sync work that was scheduled by effects\n  if (!isBatchingUpdates && !isRendering) {\n    performSyncWork();\n  }\n}\n")),(0,a.kt)("p",null,"\u63d0\u4ea4\u9636\u6bb5\u76f8\u6bd4\u4e8e\u6e32\u67d3\u9636\u6bb5\u8981\u7b80\u5355\u5f88\u591a\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u66f4\u65b0\u7684\u524d\u671f\u64cd\u4f5c\u90fd\u5728\u6e32\u67d3\u9636\u6bb5\u505a\u597d\u4e86\u3002\u63d0\u4ea4\u9636\u6bb5\u7684\u4e3b\u8981\u4efb\u52a1\u4e5f\u5c31\u662f\u628a\u4e4b\u524d\u8bb0\u5f55\u597d\u7684\u66f4\u65b0\u64cd\u4f5c\u53cd\u6620\u5230\u771f\u5b9e\u7684dom\u4e0a\uff0c\u5e76\u4e14\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u4e0d\u80fd\u4e2d\u65ad\u7684\u3002"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"before mutation")," \u4e4b\u524d"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"before mutation")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"mutation")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"layout")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"layout")," \u4e4b\u540e")),(0,a.kt)("h4",{id:"react-15-\u6e90\u7801"},"React 15 \u6e90\u7801"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6e90\u7801\u6709\u5220\u51cf\u4f5c\u7b80\u5316\u5904\u7406 \u4e14 \u672a\u6838\u9a8c orz")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"setState -> enqueueSetState -> enqueueUpdate -> isBatchingUpdates\n\n\u7ec4\u4ef6\u5165\u961fdirtyComponents \n\u5faa\u73af\u66f4\u65b0dirtyComponents\u91cc\u7684\u6240\u6709\u7ec4\u4ef6\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"setState \u65b9\u6cd5\u6302\u8f7d\u5728\u539f\u578b\u94fe\u4e0a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"ReactComponent.prototype.setState = function (partialState, callback) {\n  // \u8c03\u7528 setState \u540e\uff0c\u4f1a\u8c03\u7528\u5185\u90e8\u7684 updater.enqueueSetState\n  this.updater.enqueueSetState(this, partialState);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'setState');\n  }\n};\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"enqueueSetState")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"enqueueSetState(component, partialState) {\n  // \u5728\u7ec4\u4ef6\u7684 _pendingStateQueue \u4e0a\u6682\u5b58\u65b0\u7684 state\n  if (!component._pendingStateQueue) {\n    component._pendingStateQueue = [];\n  }\n  var queue = component._pendingStateQueue;\n  queue.push(partialState);\n  enqueueUpdate(component);\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5c06\u65b0\u7684 ",(0,a.kt)("inlineCode",{parentName:"li"},"state")," \u653e\u8fdb\u7ec4\u4ef6\u7684\u72b6\u6001\u961f\u5217\u91cc"),(0,a.kt)("li",{parentName:"ul"},"\u7528 ",(0,a.kt)("inlineCode",{parentName:"li"},"enqueueUpdate")," \u6765\u5904\u7406\u5c06\u8981\u66f4\u65b0\u7684\u5b9e\u4f8b\u5bf9\u8c61")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"enqueueUpdate")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function enqueueUpdate(component) {\n  // \u6ce8\u610f\u8fd9\u4e00\u53e5\u662f\u95ee\u9898\u7684\u5173\u952e\uff0cisBatchingUpdates\u6807\u8bc6\u7740\u5f53\u524d\u662f\u5426\u5904\u4e8e\u6279\u91cf\u521b\u5efa/\u66f4\u65b0\u7ec4\u4ef6\u7684\u9636\u6bb5\n  if (!batchingStrategy.isBatchingUpdates) {\n    // \u82e5\u5f53\u524d\u6ca1\u6709\u5904\u4e8e\u6279\u91cf\u521b\u5efa/\u66f4\u65b0\u7ec4\u4ef6\u7684\u9636\u6bb5\uff0c\u5219\u7acb\u5373\u66f4\u65b0\u7ec4\u4ef6\n    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n    return;\n  }\n  // \u5426\u5219\uff0c\u5148\u628a\u7ec4\u4ef6\u585e\u5165 dirtyComponents \u961f\u5217\u91cc\uff0c\u8ba9\u5b83\u201c\u518d\u7b49\u7b49\u201d\n  dirtyComponents.push(component);\n}\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"batchingStrategy")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var batchingStrategy = {\n  // \u5168\u5c40\u552f\u4e00\u7684\u9501\u6807\u8bc6 \u5224\u65ad\u662f\u5426\u5728\u66f4\u65b0\u6d41\u7a0b\u4e2d\n  isBatchingUpdates: false,\n \n  // \u53d1\u8d77\u66f4\u65b0\u52a8\u4f5c\u7684\u65b9\u6cd5\n  batchedUpdates: function(callback, a, b, c, d, e) {\n    // \u7f13\u5b58\u9501\u53d8\u91cf\n    var alreadyBatchingStrategy = ReactDefaultBatchingStrategy.isBatchingUpdates\n    // \u628a\u9501\u201c\u9501\u4e0a\u201d\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true\n\n    if (alreadyBatchingStrategy) {\n      // \u5982\u679c\u5df2\u7ecf\u5728\u66f4\u65b0\u72b6\u6001\u4e2d\uff0c\u91cd\u65b0\u8c03\u7528 enqueueUpdate\uff0c\u5c06 component \u653e\u5165 dirtyComponents\n      // callback -> enqueueUpdate\n      callback(a, b, c, d, e)\n    } else {\n      // \u542f\u52a8\u4e8b\u52a1\uff0c\u5c06 callback \u653e\u8fdb\u4e8b\u52a1\u91cc\u6267\u884c\n      transaction.perform(callback, null, a, b, c, d, e)\n    }\n  }\n}\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Transaction")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"var RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function () {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  }\n};\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n};\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Transaction")," \u662f\u521b\u5efa\u4e00\u4e2a\u9ed1\u76d2\uff0c\u8be5\u9ed1\u76d2\u80fd\u591f\u5c01\u88c5\u4efb\u4f55\u7684\u65b9\u6cd5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/*\n*                       wrappers (injected at creation time)\n*                                      +        +\n*                                      |        |\n*                    +-----------------|--------|--------------+\n*                    |                 v        |              |\n*                    |      +---------------+   |              |\n*                    |   +--|    wrapper1   |---|----+         |\n*                    |   |  +---------------+   v    |         |\n*                    |   |          +-------------+  |         |\n*                    |   |     +----|   wrapper2  |--------+   |\n*                    |   |     |    +-------------+  |     |   |\n*                    |   |     |                     |     |   |\n*                    |   v     v                     v     v   | wrapper\n*                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n* perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n* +-----------------\x3e|-|---|-|---|--\x3e|anyMethod|---|---|-|---|-|--------\x3e\n*                    | |   | |   |   |         |   |   | |   | |\n*                    | |   | |   |   |         |   |   | |   | |\n*                    | |   | |   |   |         |   |   | |   | |\n*                    | +---+ +---+   +---------+   +---+ +---+ |\n*                    |  initialize                    close    |\n*                    +-----------------------------------------+\n*/\n")),(0,a.kt)("p",null,"\u8bf4\u767d\u4e86\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"Transaction")," \u5c31\u50cf\u662f\u4e00\u4e2a\u201c\u58f3\u5b50\u201d\uff0c\u5b83\u9996\u5148\u4f1a\u5c06\u76ee\u6807\u51fd\u6570\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"wrapper"),"\uff08\u4e00\u7ec4 ",(0,a.kt)("inlineCode",{parentName:"p"},"initialize")," \u53ca ",(0,a.kt)("inlineCode",{parentName:"p"},"close")," \u65b9\u6cd5\u79f0\u4e3a\u4e00\u4e2a ",(0,a.kt)("inlineCode",{parentName:"p"},"wrapper"),"\uff09 \u5c01\u88c5\u8d77\u6765\uff0c\u540c\u65f6\u9700\u8981\u4f7f\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"Transaction")," \u7c7b\u66b4\u9732\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"perform")," \u65b9\u6cd5\u53bb\u6267\u884c\u5b83\u3002"),(0,a.kt)("p",null,"\u5982\u4e0a\u9762\u7684\u6ce8\u91ca\u6240\u793a\uff0c\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"anyMethod")," \u6267\u884c\u4e4b\u524d\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"perform")," \u4f1a\u5148\u6267\u884c\u6240\u6709 ",(0,a.kt)("inlineCode",{parentName:"p"},"wrapper")," \u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"initialize")," \u65b9\u6cd5\uff0c\u6267\u884c\u5b8c\u540e\uff0c\u518d\u6267\u884c\u6240\u6709 ",(0,a.kt)("inlineCode",{parentName:"p"},"wrapper")," \u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"close")," \u65b9\u6cd5\u3002\u8fd9\u5c31\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"React")," \u4e2d\u7684\u4e8b\u52a1\u673a\u5236\u3002"),(0,a.kt)("p",null,"\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"callback")," \u6267\u884c\u4e4b\u540e\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"RESET_BATCHED_UPDATES")," \u5c06 ",(0,a.kt)("inlineCode",{parentName:"p"},"isBatchingUpdates")," \u7f6e\u4e3a",(0,a.kt)("inlineCode",{parentName:"p"},"false"),"\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"FLUSH_BATCHED_UPDATES")," \u6267\u884c ",(0,a.kt)("inlineCode",{parentName:"p"},"flushBatchedUpdates")," \uff0c\u7136\u540e\u91cc\u9762\u4f1a\u5faa\u73af\u6240\u6709 ",(0,a.kt)("inlineCode",{parentName:"p"},"dirtyComponent"),"\uff0c\u8c03\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"updateComponent"),"\u6765\u6267\u884c\u6240\u6709\u7684\u751f\u547d\u5468\u671f\u65b9\u6cd5\n",(0,a.kt)("inlineCode",{parentName:"p"},"(componentWillReceiveProps \u2192 shouldComponentUpdate \u2192 componentWillUpdate \u2192 render \u2192 componentDidUpdate)"),"\uff0c\u6700\u540e\u5b9e\u73b0\u7ec4\u4ef6\u7684\u66f4\u65b0\u3002"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"ReactMount.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"_renderNewRootComponent: function( nextElement, container, shouldReuseMarkup, context ) {\n  // \u5b9e\u4f8b\u5316\u7ec4\u4ef6\n  var componentInstance = instantiateReactComponent(nextElement);\n  // \u521d\u59cb\u6e32\u67d3\u76f4\u63a5\u8c03\u7528 batchedUpdates \u8fdb\u884c\u540c\u6b65\u6e32\u67d3\n  ReactUpdates.batchedUpdates(\n    batchedMountComponentIntoNode,\n    componentInstance,\n    container,\n    shouldReuseMarkup,\n    context\n  );\n  ...\n}\n")),(0,a.kt)("p",null,"\u8fd9\u6bb5\u4ee3\u7801\u662f\u5728\u9996\u6b21\u6e32\u67d3\u7ec4\u4ef6\u65f6\u4f1a\u6267\u884c\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u6211\u4eec\u770b\u5230\u5b83\u5185\u90e8\u8c03\u7528\u4e86\u4e00\u6b21 ",(0,a.kt)("inlineCode",{parentName:"p"},"batchedUpdates"),"\uff0c\u8fd9\u662f\u56e0\u4e3a\u5728\u7ec4\u4ef6\u7684\u6e32\u67d3\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u6309\u7167\u987a\u5e8f\u8c03\u7528\u5404\u4e2a\u751f\u547d\u5468\u671f\u51fd\u6570\u3002\u5f00\u53d1\u8005\u5f88\u6709\u53ef\u80fd\u5728\u58f0\u660e\u5468\u671f\u51fd\u6570\u4e2d\u8c03\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"setState"),"\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u5f00\u542f ",(0,a.kt)("inlineCode",{parentName:"p"},"batch")," \u6765\u786e\u4fdd\u6240\u6709\u7684\u66f4\u65b0\u90fd\u80fd\u591f\u8fdb\u5165 ",(0,a.kt)("inlineCode",{parentName:"p"},"dirtyComponents")," \u91cc\u53bb\uff0c\u8fdb\u800c\u786e\u4fdd\u521d\u59cb\u6e32\u67d3\u6d41\u7a0b\u4e2d\u6240\u6709\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"setState")," \u90fd\u662f\u751f\u6548\u7684\u3002"),(0,a.kt)("p",null,"\u4e0b\u9762\u4ee3\u7801\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"React")," \u4e8b\u4ef6\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u3002\u5f53\u6211\u4eec\u5728\u7ec4\u4ef6\u4e0a\u7ed1\u5b9a\u4e86\u4e8b\u4ef6\u4e4b\u540e\uff0c\u4e8b\u4ef6\u4e2d\u4e5f\u6709\u53ef\u80fd\u4f1a\u89e6\u53d1 ",(0,a.kt)("inlineCode",{parentName:"p"},"setState"),"\u3002\u4e3a\u4e86\u786e\u4fdd\u6bcf\u4e00\u6b21 ",(0,a.kt)("inlineCode",{parentName:"p"},"setState")," \u90fd\u6709\u6548\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"React")," \u540c\u6837\u4f1a\u5728\u6b64\u5904\u624b\u52a8\u5f00\u542f\u6279\u91cf\u66f4\u65b0\u3002"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"ReactEventListener.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"dispatchEvent: function (topLevelType, nativeEvent) {\n  ...\n  try {\n    // \u5904\u7406\u4e8b\u4ef6\n    ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n  } finally {\n    TopLevelCallbackBookKeeping.release(bookKeeping);\n  }\n}\n")),(0,a.kt)("p",null,"\u6240\u4ee5\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"isBatchingUpdates")," \u8fd9\u4e2a\u53d8\u91cf\uff0c\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"React")," \u7684\u751f\u547d\u5468\u671f\u51fd\u6570\u4ee5\u53ca\u5408\u6210\u4e8b\u4ef6\u6267\u884c\u524d\uff0c\u5df2\u7ecf\u88ab ",(0,a.kt)("inlineCode",{parentName:"p"},"React")," \u6084\u6084\u4fee\u6539\u4e3a\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"\uff0c\u8fd9\u4e2a\u65f6\u5019\u5df2\u7ecf\u5f00\u59cb\u4e86\u4e8b\u52a1\uff0c\u6240\u4ee5\u53ea\u8981\u4e0d\u8131\u79bb ",(0,a.kt)("inlineCode",{parentName:"p"},"React"),"\uff0c\u4e0d\u7ba1\u591a\u5c11\u6b21 ",(0,a.kt)("inlineCode",{parentName:"p"},"setState")," \u90fd\u4f1a\u628a\u5176\u7ec4\u4ef6\u653e\u5165\u810f\u7ec4\u4ef6\u961f\u5217\u7b49\u5f85\u66f4\u65b0\u3002\u5f53\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u4e8b\u52a1\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"close")," \u65b9\u6cd5\u4f1a\u518d\u628a ",(0,a.kt)("inlineCode",{parentName:"p"},"isBatchingUpdates")," \u6539\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),"\u3002"),(0,a.kt)("h4",{id:"react-16-\u6e90\u7801"},"React 16 \u6e90\u7801"),(0,a.kt)("p",null,"\u56e0\u4e3a React 16 \u4e2d\u5df2\u7ecf\u6ca1\u6709\u4e86\u4e8b\u52a1\u4e00\u8bf4\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"componentDidMount useEffect"),"\u6267\u884c\u65f6\u673a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"useEffect"),"\u4f1a\u5728",(0,a.kt)("inlineCode",{parentName:"p"},"commit"),"\u9636\u6bb5\u6267\u884c\u5b8c\u4ee5\u540e\u5f02\u6b65\u7684\u8c03\u7528\u56de\u8c03\u51fd\u6570")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"componentDidMount")," \u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"layout")," \u9636\u6bb5\u540c\u6b65\u7684\u8c03\u7528")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"useLayoutEffect")," \u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"layout"),"\u9636\u6bb5\u540c\u6b65\u7684\u8c03\u7528"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"React.createElement(MyComponent, null)\n\nconst fiberRoot = document.querySelector('#app')._reactRootContainer._internalRoot\n\n\nconst hostRootFiberNode = fiberRoot.current\n\nfiberRoot.current.stateNode === fiberRoot; // true\n\n")),(0,a.kt)("p",null,"Fiber\u662fReact16\u4e2d\u7684\u534f\u8c03\u5f15\u64ce\uff0c\u4e3b\u8981\u76ee\u7684\u662f\u4f7fVirtual DOM\u53ef\u4ee5\u8fdb\u884c\u589e\u91cf\u5f0f\u6e32\u67d3\uff1a\u80fd\u591f\u5c06\u6e32\u67d3\u5de5\u4f5c\u5206\u5272\u6210\u5757\uff0c\u5e76\u5c06\u5176\u5206\u6563\u5230\u8fc7\u4e2a\u5e27\u4e2d"),(0,a.kt)("p",null,"Hooks\u7684\u89c4\u5219"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"\u4e0d\u8981\u5728\u5faa\u73af\uff0c\u6761\u4ef6\u5224\u65ad\uff0c\u5d4c\u5957\u51fd\u6570\u91cc\u9762\u8c03\u7528 Hooks")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"\u53ea\u5728 React \u7684\u51fd\u6570\u91cc\u9762\u8c03\u7528 Hooks"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://zhuanlan.zhihu.com/p/48293710"},"\u8bd1 React hooks: \u4e0d\u662f\u9b54\u6cd5\uff0c\u53ea\u662f\u6570\u7ec4"))))}d.isMDXComponent=!0}}]);